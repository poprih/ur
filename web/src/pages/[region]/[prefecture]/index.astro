---
import { ArrowLeft, HomeIcon } from "@/assets/icons";
import { getAreasWithSkcs, getPrefectures } from "@/endpoints";
import Layout from "@/layouts/Layout.astro";

export const getStaticPaths = async () => {
  const prefectures = await getPrefectures();
  return prefectures.map((prefecture) => ({
    params: {
      region: prefecture.region_code.toLowerCase(),
      prefecture: prefecture.code.toLowerCase(),
    },
    props: {
      regionData: {
        name: prefecture.region_name,
        code: prefecture.region_code,
      },
      prefectureData: {
        name: prefecture.name,
        code: prefecture.code,
        id: prefecture.id,
      },
    },
  }));
};

const { region } = Astro.params;
const { regionData, prefectureData } = Astro.props;

const areasWithSkcs = await getAreasWithSkcs(prefectureData.id);
---

<Layout
  title={`${prefectureData.name}のUR空き情報 | UR空き情報モニター`}
  description={`${prefectureData.name}のUR空き情報をリアルタイムでLINEに通知。希望の物件が空いたらすぐにお知らせします。`}
>
  <div class="bg-primary-50 py-4">
    <div class="container mx-auto px-4">
      <!-- Breadcrumb Navigation -->
      <nav class="flex items-center text-sm" aria-label="Breadcrumb">
        <ol class="inline-flex items-center">
          <li class="inline-flex items-center">
            <a
              href="/"
              class="inline-flex items-center text-gray-600 hover:text-primary-600"
            >
              <HomeIcon class="w-4 h-4" />
              ホーム
            </a>
          </li>
          <li>
            <a
              class="flex items-center"
              href={`/${region}`}
              class="inline-flex items-center text-gray-600 hover:text-primary-600"
            >
              <ArrowLeft class="w-4 h-4" />
              <span class="ml-1 text-gray-500 md:ml-2 font-medium"
                >{regionData.name}地方</span
              >
            </a>
          </li>
          <li>
            <div class="flex items-center">
              <ArrowLeft class="w-4 h-4" />
              <span class="ml-1 text-gray-500 md:ml-2 font-medium"
                >{prefectureData.name}</span
              >
            </div>
          </li>
        </ol>
      </nav>
    </div>
  </div>

  <div class="container mx-auto px-4 py-8 mt-4">
    <a
      href={`/${region}`}
      class="inline-flex items-center text-secondary-600 hover:text-secondary-800 mb-6 transition-colors"
    >
      <ArrowLeft class="w-4 h-4" />
      {regionData.name}に戻る
    </a>

    <!-- Header Card -->
    <div class="card mb-6">
      <div class="px-5 py-4 border-b border-gray-100 bg-white">
        <h1 class="text-2xl font-semibold text-secondary-900">
          <span class="text-primary-600">{prefectureData.name}</span
          >のUR空き状況をリアルタイムで通知
        </h1>
      </div>
    </div>

    <!-- Guide Card -->
    <div class="card mb-6">
      <div class="px-5 py-4 border-b border-gray-100 bg-white">
        <h2 class="text-xl font-semibold text-secondary-800 mb-4">
          使い方ガイド
        </h2>
        <div class="space-y-4 text-gray-700">
          <p>1. 下記の地域から、希望のエリアを選択してください。</p>
          <p>2. エリアページで、希望のUR物件名称と間取りを設定できます。</p>
          <p>3. LINEで友だち追加して、通知を受け取る準備をしましょう。</p>
          <p>
            4. 設定した条件に合う物件が空いたら、すぐにLINEでお知らせします！
          </p>
        </div>
      </div>
    </div>

    <!-- Property List Card -->
    <div class="card">
      {
        areasWithSkcs.map((area) => (
          <div class="px-5 py-4 border-b border-gray-100 bg-white">
            <h2 class="text-xl font-semibold text-secondary-800">
              {area.name}
            </h2>
            <ul class="flex flex-wrap gap-4">
              {area.skcs.map((skc) => (
                <li>
                  <a
                    href={`/${region}/${prefectureData.code.toLowerCase()}/${skc.code}`}
                    class="text-primary hover:text-secondary underline"
                  >
                    {skc.name}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))
      }
    </div>
  </div>
</Layout>
