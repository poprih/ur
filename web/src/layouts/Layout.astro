---
import { translations, locales, defaultLocale } from "../config/i18n";
import type { Locale } from "../config/i18n";

interface Props {
  locale: Locale;
  title?: string;
  description?: string;
}

const { locale = defaultLocale } = Astro.props;
const t = translations[locale];
---

<!doctype html>
<html lang={locale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{t.meta.title}</title>
    <meta name="description" content={t.meta.description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={t.meta.title} />
    <meta property="og:description" content={t.meta.description} />
    <meta property="og:image" content={`${Astro.url.origin}/ur-monitor.png`} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={t.meta.title} />
    <meta property="twitter:description" content={t.meta.description} />
    <meta
      property="twitter:image"
      content={`${Astro.url.origin}/ur-monitor.png`}
    />
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-CSHSF5KRY3"
    ></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(...args: any[]) {
        window.dataLayer.push(args);
      }
      gtag("js", new Date());

      gtag("config", "G-CSHSF5KRY3");
    </script>
  </head>
  <body class="bg-gray-50 text-gray-900">
    <main>
      <slot />
    </main>
    <footer class="bg-secondary text-white py-8">
      <div class="container mx-auto px-4 text-center">
        <p>{t.sections.footer.copyright}</p>
      </div>
    </footer>

    <script>
      // JavaScript for toggling the language menu
      document.addEventListener("DOMContentLoaded", function () {
        const button = document.getElementById("language-menu-button");
        const menu = document.getElementById("language-menu");

        if (button && menu) {
          // Toggle menu on button click
          button.addEventListener("click", () => {
            const expanded = button.getAttribute("aria-expanded") === "true";
            button.setAttribute("aria-expanded", expanded ? "false" : "true");
            menu.classList.toggle("hidden");
          });

          // Close menu when clicking outside
          document.addEventListener("click", (event) => {
            const target = event.target as Node;
            if (
              button &&
              menu &&
              !button.contains(target) &&
              !menu.contains(target)
            ) {
              button.setAttribute("aria-expanded", "false");
              menu.classList.add("hidden");
            }
          });

          // Handle keyboard navigation
          document.addEventListener("keydown", (event) => {
            if (
              event.key === "Escape" &&
              button.getAttribute("aria-expanded") === "true"
            ) {
              button.setAttribute("aria-expanded", "false");
              menu.classList.add("hidden");
              button.focus();
            }
          });
        }
      });
    </script>
  </body>
</html>

<style is:global>
  html {
    font-family: system-ui, sans-serif;
    scroll-behavior: smooth;
  }

  section {
    padding: 4rem 0;
  }

  .container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
</style>
